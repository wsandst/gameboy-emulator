#![allow(bad_style)]

extern crate libc;

/* automatically generated by rust-bindgen */
use std::os::raw::c_uint;
use std::os::raw::c_int;
use std::os::raw::c_double;
use std::os::raw::c_short;

pub enum Struct_blip_t { }
pub type blip_t = Struct_blip_t;
pub type Enum_Unnamed1 = c_uint;
pub const blip_max_ratio: c_uint = 1048576;
pub type Enum_Unnamed2 = c_uint;
pub const blip_max_frame: c_uint = 4000;
pub type blip_buffer_t = blip_t;
extern "C" {
    pub fn blip_new(sample_count: c_int) -> *mut blip_t;
    pub fn blip_set_rates(arg1: *mut blip_t, clock_rate: c_double,
                          sample_rate: c_double) -> ();
    pub fn blip_clear(arg1: *mut blip_t) -> ();
    pub fn blip_add_delta(arg1: *mut blip_t, clock_time: c_uint,
                          delta: c_int) -> ();
    pub fn blip_add_delta_fast(arg1: *mut blip_t, clock_time: c_uint,
                               delta: c_int) -> ();
    pub fn blip_clocks_needed(arg1: *const blip_t,
                              sample_count: c_int) -> c_int;
    pub fn blip_end_frame(arg1: *mut blip_t, clock_duration: c_uint)
     -> ();
    pub fn blip_samples_avail(arg1: *const blip_t) -> c_int;
    pub fn blip_read_samples(arg1: *mut blip_t, out: *mut c_short,
                             count: c_int, stereo: c_int)
     -> c_int;
    pub fn blip_delete(arg1: *mut blip_t) -> ();
}
